/**
 * Performance test of String's indexOf(String), indexOf(char), and contains(String)
 *
 * All but the contains() methods were taken from http://stackoverflow.com/a/33907329/75113 (thanks!)
 *
 * The rest was generated by the Maven archetype for JMH:
 *   mvn archetype:generate -DarchetypeGroupId=org.openjdk.jmh -DarchetypeArtifactId=jmh-java-benchmark-archetype
 */
package com.jitterted;

import org.openjdk.jmh.annotations.Benchmark;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.OutputTimeUnit;
import org.openjdk.jmh.annotations.Scope;
import org.openjdk.jmh.annotations.Setup;
import org.openjdk.jmh.annotations.State;
import org.openjdk.jmh.annotations.Warmup;

import java.util.concurrent.TimeUnit;

@State(Scope.Benchmark)
@BenchmarkMode(Mode.AverageTime)
@OutputTimeUnit(TimeUnit.NANOSECONDS)
@Warmup(iterations = 5, time = 500, timeUnit = TimeUnit.MILLISECONDS)
@Measurement(iterations = 10, time = 500, timeUnit = TimeUnit.MILLISECONDS)
@Fork(3)
public class IndexOfAndContainsPerfTest {
  private String str;
  private char c;
  private String s;

  @Setup
  public void setup() {
    str = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
    c = 'z';
    s = "z";
  }

  @Benchmark
  public int indexOfChar() {
    return str.indexOf('z');
  }

  @Benchmark
  public int indexOfString() {
    return str.indexOf("z");
  }

  @Benchmark
  public int indexOfCharIndirect() {
    return str.indexOf(c);
  }

  @Benchmark
  public int indexOfStringIndirect() {
    return str.indexOf(s);
  }

  @Benchmark
  public boolean containsString() {
    return str.contains("z");
  }

  @Benchmark
  public boolean containsStringIndirect() {
    return str.contains(s);
  }

}